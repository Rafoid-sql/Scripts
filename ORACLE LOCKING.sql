@@ -0,0 +1,230 @@
--ORACLE LOCKING
COL MACHINE FORMAT A30
COL ACTION FORMAT A30
SELECT INST_ID,SID, SERIAL#, USERNAME, OSUSER,ACTION,LOCKWAIT,STATUS,MACHINE,PROGRAM,SQL_ID,EVENT,WAIT_CLASS,P1TEXT,P2TEXT,P3TEXT,
BLOCKING_SESSION,FINAL_BLOCKING_SESSION,SECONDS_IN_WAIT,SQL_EXEC_ID,PREV_SQL_ADDR,PREV_SQL_ID
FROM GV$SESSION 
WHERE USERNAME IS NOT NULL
AND STATUS='ACTIVE'
--AND SID=632
--AND USERNAME = 'PROTOTIPO';


---ACTIVE SESSIONS LIST
COL MACHINE FORMAT A30
COL ACTION FORMAT A30
COL OSUSER FORMAT A15
COL USERNAME FORMAT A20
COL P1TEXT FORMAT A15
COL P3TEXT FORMAT A15
COL INST_ID FORMAT 9999
COL WAIT_CLASS FORMAT A30
ALTER SESSION SET NLS_DATE_FORMAT='DD/MM/YYYY HH24:MI:SS';
SELECT INST_ID,SID, SERIAL#, USERNAME, OSUSER, LOGON_TIME,ACTION,LOCKWAIT,STATUS,MACHINE,PROGRAM,SQL_ID,EVENT,WAIT_CLASS,P1TEXT,P2TEXT,P3TEXT,
--BLOCKING_SESSION,FINAL_BLOCKING_SESSION,SECONDS_IN_WAIT,SQL_EXEC_ID,PREV_SQL_ADDR,PREV_SQL_ID
BLOCKING_SESSION,FINAL_BLOCKING_SESSION,WAIT_TIME_MICRO/1000000 AS "WAIT(S)",SQL_EXEC_ID,PREV_SQL_ADDR,PREV_SQL_ID
FROM GV$SESSION 
WHERE STATUS = 'ACTIVE'
AND USERNAME IS NOT NULL
AND USERNAME != 'SYS'
--AND USERNAME='ORACLEFUSION';
-----

SELECT INST_ID,SID, SERIAL#, USERNAME, OSUSER, LOGON_TIME,ACTION,LOCKWAIT,STATUS,MACHINE,PROGRAM,SQL_ID,EVENT,WAIT_CLASS,P1TEXT,P2TEXT,P3TEXT,
BLOCKING_SESSION,FINAL_BLOCKING_SESSION,WAIT_TIME_MICRO/1000000,SQL_EXEC_ID,PREV_SQL_ADDR,PREV_SQL_ID 
FROM GV$SESSION 
WHERE SID=250 
AND SERIAL#=39515;

---ACTIVE SESSIONS LIST, ORDERED BY SECONDS_IN_WAIT (10G) OR WAIT_TIME_MICRO (11G)

COL MACHINE FORMAT A30
COL ACTION FORMAT A30
COL OSUSER FORMAT A15
COL USERNAME FORMAT A20
COL P1TEXT FORMAT A15
COL P3TEXT FORMAT A15
COL INST_ID FORMAT 9999
COL WAIT_CLASS FORMAT A30
SELECT 
--SECONDS_IN_WAIT, --(10G)
WAIT_TIME_MICRO/1000000 "TIME_WAITING(S)", --(11G)
INST_ID,SID, SERIAL#, USERNAME, OSUSER,ACTION,LOCKWAIT,STATUS,MACHINE,PROGRAM,SQL_ID,EVENT,WAIT_CLASS,P1TEXT,P2TEXT,P3TEXT,
BLOCKING_SESSION,FINAL_BLOCKING_SESSION,SQL_EXEC_ID,PREV_SQL_ADDR,PREV_SQL_ID
FROM GV$SESSION 
WHERE USERNAME IS NOT NULL
--AND STATUS='ACTIVE'
--AND WAIT_TIME_MICRO/1000000 >= 1
AND USERNAME = 'TOTVS_RO'
AND USERNAME != 'SYS'
ORDER BY 1;

---RESUME

COL MACHINE FORMAT A30
COL ACTION FORMAT A30
COL USERNAME FORMAT A20
COL OSUSER FORMAT A20
COL INST FORMAT A4
COL INST FORMAT 9999
SELECT INST_ID INST,SID, SERIAL#, USERNAME, OSUSER,ACTION,LOCKWAIT,STATUS,MACHINE,PROGRAM,SQL_ID,EVENT,WAIT_CLASS, '### '||WAIT_TIME,
BLOCKING_SESSION,FINAL_BLOCKING_SESSION,PREV_SQL_ID
FROM GV$SESSION 
WHERE STATUS = 'ACTIVE'
AND USERNAME IS NOT NULL
AND USERNAME != 'SYS'
AND SID=853;

------


DETECTING AND RESOLVING LOCKING CONFLICTS USING TOPSESSIONS (DOC ID 164760.1)

--QUEM ESTA ESPERANDO POR QUEM?


--QUEM ESTA SEGURANDO OBJETOS EM UMA TRANSACAO A MAIS DE 20MIN?
SELECT * FROM GV$LOCK WHERE TYPE='TM' AND CTIME>1200;

/*
INST_ID - ID DA INSTANCIA (RAC)
L.ADDR - 
L.KADDR - 
L.SID - SID DA SESSÃO EM QUESTÃO
L.TYPE - TIPO DE LOCK
L.ID1 - DEPENDE, PESQUISANDO
*/
SELECT L.INST_ID,L.ADDR,L.KADDR,L.SID,L.TYPE,L.ID1,L.ID2,L.LMODE LOCKED_MODE,L.REQUEST REQUESTED_MODE,L.CTIME,L.BLOCK 
FROM GV$LOCK L, GV$SESSION S
WHERE L.TYPE != 'AE'
AND L.TYPE != 'MR'
AND S.INST_ID=L.INST_ID
AND S.SID=L.SID
AND S.USERNAME IS NOT NULL;


SELECT /*+ ORDERED */
L.SID, L.LMODE, TRUNC(L.CTIME/60) MIN_BLOCKED, U.NAME||'.'||O.NAME BLOCKED_OBJ
FROM (SELECT * FROM V$LOCK
WHERE TYPE='TM'
AND SID IN (SELECT SID
FROM V$LOCK
WHERE BLOCK!=0)) L
, SYS.OBJ$ O
WHERE O.OBJ# = L.ID1
AND O.OWNER# = U.USER#
/

--WHO'S LOCKING WHO
SELECT L1.SID ||' (INSTANCE '|| L1.INST_ID || ') IS BLOCKING ' || L2.SID||' (INSTANCE '|| L2.INST_ID || ')' BLOCKING_SESSIONS
FROM GV$LOCK L1, GV$LOCK L2
WHERE
L1.BLOCK = 1 AND
L2.REQUEST > 0 AND
L1.ID1 = L2.ID1 AND
L1.ID2 = L2.ID2
AND L1.INST_ID=L2.INST_ID;

--COMANDO VOLTARÁ APENAS SE HOUVER LOCKS PARA O USUARIO SELECIONADO

COL WAIT_CLASS FORMAT A30
COL MACHINE FORMAT A20
COL USERNAME FORMAT A20
COL PROGRAM FORMAT A20
COL OSUSER FORMAT A30
COL OS_COMMANDO FORMAT A20
SELECT S.SID,S.SERIAL#,S.USERNAME,S.MACHINE,S.OSUSER,S.STATUS,S.PROGRAM,S.SQL_ID,S.WAIT_CLASS,S.BLOCKING_SESSION,S.FINAL_BLOCKING_SESSION,S.WAIT_TIME_MICRO/1000000 AS WAIT_SECONDS, PROC.SPID AS OS_PROC_BLOCKING, 'KILL -9 '||PROC.SPID AS OS_COMMAND, SLOCK.USERNAME AS BLOCKING_USER, SLOCK.STATUS AS BLOCKING_STATUS
FROM GV$SESSION S, GV$PROCESS PROC, GV$SESSION SLOCK
WHERE S.USERNAME='MHB' --USUARIO COM LOCK
AND S.BLOCKING_SESSION IS NOT NULL
AND S.FINAL_BLOCKING_SESSION=SLOCK.SID
AND PROC.ADDR = (SELECT PADDR FROM GV$SESSION WHERE SID=S.FINAL_BLOCKING_SESSION)
ORDER BY 3;


--WAITS
SELECT S.INST_ID,S.USERNAME,SW.EVENT, SW.STATE, COUNT(*) FROM GV$SESSION_WAIT SW, GV$SESSION S 
WHERE S.SID=SW.SID AND SW.INST_ID=S.INST_ID
AND S.USERNAME IS NOT NULL
--AND S.USERNAME IN ('TEKNISA')
--AND S.USERNAME NOT IN ('SYS','SYSMAN','DBSNMP')
--AND SW.EVENT <> 'SQL*NET MESSAGE FROM CLIENT'
GROUP BY S.INST_ID,S.USERNAME,SW.EVENT, SW.STATE
ORDER BY 4 DESC;

--WAITS BY SQL_ID
SELECT S.SQL_ID,SW.EVENT, SW.STATE, COUNT(*) FROM GV$SESSION_WAIT SW, GV$SESSION S 
WHERE S.SID=SW.SID AND SW.INST_ID=S.INST_ID
AND S.USERNAME IS NOT NULL
--AND S.USERNAME IN ('RADIUS')
AND SW.EVENT <> 'SQL*NET MESSAGE FROM CLIENT'
GROUP BY S.SQL_ID,S.USERNAME,SW.EVENT, SW.STATE
ORDER BY 4, 1;

--LOCKED OBJECTS - BLOCKING
COL OBJECT_NAME FORMAT A30
COL U_NAME FORMAT A12
SELECT S.SID,USERNAME U_NAME, OWNER OBJ_OWNER, OBJECT_NAME, OBJECT_TYPE, S.OSUSER,
DECODE(L.BLOCK, 0, 'NOT BLOCKING', 1, 'BLOCKING', 2, 'GLOBAL') STATUS,
DECODE(V.LOCKED_MODE, 0, 'NONE', 1, 'NULL', 2, 'ROW-S (SS)', 3, 'ROW-X (SX)', 4, 'SHARE', 5, 'S/ROW-X (SSX)', 6, 'EXCLUSIVE', TO_CHAR(LMODE)
) MODE_HELD
FROM GV$LOCKED_OBJECT V, DBA_OBJECTS D, GV$LOCK L, GV$SESSION S
WHERE V.OBJECT_ID = D.OBJECT_ID
AND ( V.OBJECT_ID = L.ID1 )
AND L.BLOCK <> 0
AND V.SESSION_ID = S.SID
AND S.SID=
ORDER BY USERNAME, SESSION_ID;

--LOCKED OBJECTS
COL OBJECT_NAME FORMAT A20
COL MACHINE FORMAT A12
COL PROGRAM FORMAT A15
COL USERNAME FORMAT A12
SELECT O.OBJECT_NAME, L.LOCKED_MODE, L.SESSION_ID, S.SERIAL#, P.SPID, S.PROGRAM,S.USERNAME,
S.MACHINE,S.PORT , S.LOGON_TIME,SQ.SQL_FULLTEXT 
FROM V$LOCKED_OBJECT L, DBA_OBJECTS O, V$SESSION S, 
V$PROCESS P, V$SQLAREA SQ 
WHERE L.OBJECT_ID = O.OBJECT_ID 
AND L.SESSION_ID = S.SID AND S.PADDR = P.ADDR 
AND S.SQL_ID = SQ.SQL_ID
AND O.OBJECT_NAME IN ('RECTITRC','CORDEBRT');
--AND O.OBJECT_NAME='RECTITRC';


SELECT L.SESSION_ID, S.SERIAL#,L.PROCESS,S.PROGRAM,S.USERNAME,S.MACHINE,S.LOGON_TIME,SQ.SQL_FULLTEXT
FROM V$LOCKED_OBJECT L, DBA_OBJECTS O, V$SESSION S, V$PROCESS P, V$SQLAREA SQ 
WHERE L.OBJECT_ID = O.OBJECT_ID
AND S.SID=L.SESSION_ID
AND SQ.SQL_ID=S.SQL_ID
AND O.OBJECT_NAME IN ('RECTITRC','CORDEBRT');

--SQL WAITING ON SPECIFIC EVENT
SELECT EVENT, SQL_ID, COUNT(*),
AVG(TIME_WAITED) AVG_TIME_WAITED
FROM V$ACTIVE_SESSION_HISTORY
WHERE EVENT LIKE NVL('&EVENT','%MORE DATA FROM%')
GROUP BY EVENT, SQL_ID
ORDER BY EVENT, 3
/
--ENTER VALUE FOR EVENT: LIBRARY CACHE LOCK

--IF THE SQL IS NOT IN SQL_AREA:
SELECT DISTINCT * FROM V$OPEN_CURSOR
WHERE ROWNUM < 10
AND SQL_ID = '&SQLID';




--------

SELECT S.INST_ID,S.SID,S.SERIAL#,S.USERNAME,SW.EVENT, SW.STATE, S.SQL_ID, COUNT(*) FROM GV$SESSION_WAIT SW, GV$SESSION S 
WHERE S.SID=SW.SID AND SW.INST_ID=S.INST_ID
AND S.USERNAME IS NOT NULL
AND S.USERNAME IN ('AVI','MMD','RAM')
--AND S.USERNAME NOT IN ('SYS','SYSMAN','DBSNMP')
AND SW.EVENT <> 'SQL*NET MESSAGE FROM CLIENT'
GROUP BY S.INST_ID,S.SID,S.SERIAL#,S.USERNAME,SW.EVENT, SW.STATE, S.SQL_ID
ORDER BY 4 DESC;
