-- Needed UNDO Size in MB
SELECT ROUND(D.UNDO_SIZE/(1024*1024),2) "ACTUAL UNDO SIZE [MBYTE]", SUBSTR(E.VALUE,1,25) "UNDO RETENTION [SEC]", ROUND((TO_NUMBER(E.VALUE)*TO_NUMBER(F.VALUE)*G.UNDO_BLOCK_PER_SEC)/(1024*1024),2) "NEEDED UNDO SIZE [MBYTE]" 
FROM (SELECT SUM(A.BYTES) UNDO_SIZE FROM  V$DATAFILE A, V$TABLESPACE B, DBA_TABLESPACES C WHERE C.CONTENTS = 'UNDO' AND C.STATUS = 'ONLINE' AND RTRIM(B.NAME) = RTRIM(C.TABLESPACE_NAME) AND A.TS# = B.TS#) D, V$PARAMETER E, V$PARAMETER F, (SELECT MAX(UNDOBLKS/((END_TIME-BEGIN_TIME)*3600*24)) UNDO_BLOCK_PER_SEC FROM V$UNDOSTAT) G 
WHERE E.NAME = 'undo_retention' AND F.NAME = 'db_block_size';


-- Optimal UNDO Retention in seconds
SELECT ROUND(D.UNDO_SIZE/(1024*1024),2) "ACTUAL UNDO SIZE [MBYTE]", SUBSTR(E.VALUE,1,25) "UNDO RETENTION [SEC]", ROUND((D.UNDO_SIZE/(TO_NUMBER(F.VALUE)*G.UNDO_BLOCK_PER_SEC))) "OPTIMAL UNDO RETENTION [SEC]"FROM (SELECT SUM(A.BYTES) UNDO_SIZE FROM V$DATAFILE A, V$TABLESPACE B, DBA_TABLESPACES C WHERE C.CONTENTS = 'UNDO' AND C.STATUS = 'ONLINE' AND B.NAME = C.TABLESPACE_NAME AND A.TS# = B.TS#) D, V$PARAMETER E, V$PARAMETER F, (SELECT MAX(UNDOBLKS/((END_TIME-BEGIN_TIME)*3600*24)) UNDO_BLOCK_PER_SEC FROM V$UNDOSTAT ) G 
WHERE E.NAME = 'undo_retention' AND F.NAME = 'db_block_size';



SET LINES 300
SET PAGESIZE 1000
COL TYPE FORMAT A15
COL NAME FORMAT A90
COL FILE# FORMAT 9999999
COL MBYTES FORMAT 999999999
COL BLOCKS FORMAT 999999999
COL BLOCK_SIZE FORMAT 99999
SELECT 'DATAFILE' AS TYPE, NAME, ROUND(BYTES/1048576,2) AS MBYTES, BLOCKS, BLOCK_SIZE 
FROM V$DATAFILE 
WHERE NAME LIKE '%undo%';