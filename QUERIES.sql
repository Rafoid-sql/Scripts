--Verify Jobs (detailed):
SET LINES 300
SELECT O.OBJECT_NAME, S.SID, S.SERIAL#, P.SPID, S.PROGRAM, S.USERNAME, S.MACHINE, S.PORT , S.LOGON_TIME, SQ.SQL_FULLTEXT
FROM V$LOCKED_OBJECT L, DBA_OBJECTS O, V$SESSION S, V$PROCESS P, V$SQL SQ
WHERE L.OBJECT_ID = O.OBJECT_ID AND L.SESSION_ID = S.SID AND S.PADDR = P.ADDR AND S.SQL_ADDRESS = SQ.ADDRESS;

--CHECK RUNNING JOBS
SELECT J.SID, J.LOG_USER, J.JOB,J.BROKEN, J.FAILURES, J.LAST_DATE||':'||J.LAST_SEC LAST_DATE, J.THIS_DATE||':'||J.THIS_SEC THIS_DATE, J.NEXT_DATE||':'||J.NEXT_SEC NEXT_DATE, J.NEXT_DATE - J.LAST_DATE INTERVAL, J.WHAT
FROM (SELECT DJR.SID, DJ.LOG_USER, DJ.JOB, DJ.BROKEN, DJ.FAILURES, DJ.LAST_DATE, DJ.LAST_SEC, DJ.THIS_DATE, DJ.THIS_SEC, DJ.NEXT_DATE, DJ.NEXT_SEC, DJ.INTERVAL, DJ.WHAT FROM DBA_JOBS DJ, DBA_JOBS_RUNNING DJR WHERE DJ.JOB = DJR.JOB) J;

--Session Waits
SET LINESIZE 300
SET PAGESIZE 10000
SET LONG 10000
COL USERNAME FOR A25
COL MACHINE FOR A40
COL EVENT FOR A50
COL W_CLASS FOR A10
COL W_TIME FOR 999999
COL S_WAIT FOR 999999
SELECT NVL(S.USERNAME, '(ORACLE)') AS USERNAME, S.SID, S.SERIAL#, S.SQL_ID, S.MACHINE, SW.EVENT, SW.WAIT_CLASS AS W_CLASS, SW.WAIT_TIME AS W_TIME, SW.SECONDS_IN_WAIT AS S_WAIT, SW.STATE
FROM V$SESSION_WAIT SW, V$SESSION S
WHERE  S.SID = SW.SID AND SW.SECONDS_IN_WAIT > 0
ORDER BY S.SQL_ID,S.MACHINE,SW.SECONDS_IN_WAIT DESC;

--Check waits:
SET LINES 300
SET PAGESIZE 100
SELECT EVENT, STATE, COUNT(*)
FROM V$SESSION_WAIT
GROUP BY EVENT, STATE
ORDER BY 3 DESC;

--Check for locks:
SET LINES 300
SET PAGESIZE 500
COL OBJ_NAME FOR A30
COL OBJ_TYPE FOR A15
COL USERNAME FOR A15
COL "SID/SER" FOR A11
COL OSUSER FOR A20
COL PROGRAM FOR A30
COL TP FOR A2
COL LM FOR 99
COL RQ FOR 99
COL BL FOR 99
COL CTIME FOR 999999
SELECT OBJECT_NAME OBJ_NAME, OBJECT_TYPE OBJ_TYPE, USERNAME, SESSION_ID || ',' || SERIAL# "SID/SER", OSUSER, PROGRAM, L.TYPE TP, LMODE LM, REQUEST RQ, BLOCK BL, CTIME
FROM V$LOCKED_OBJECT V, DBA_OBJECTS O, V$LOCK L, V$SESSION S
WHERE S.SID=L.SID 
AND V.OBJECT_ID=O.OBJECT_ID 
AND L.ID1=O.OBJECT_ID 
AND L.SID=V.SESSION_ID 
--AND OBJECT_NAME NOT LIKE '%TMP'
ORDER BY CTIME ASC;

--Blocking sessions:
SET LINES 300
SET PAGESIZE 200
SET LONG 1000
COL "HOLDER" FOR 999999
COL "WAITER" FOR A11
COL "CLASS" FOR A20
COL "WAIT" FOR 999999
COL PROCESS FOR A10
COL PROGRAM FOR A20
COL USERNAME FOR A20
COL OSUSER FOR A20
SELECT BLOCKING_SESSION as "HOLDER",BLOCKING_SESSION_STATUS "H_STATUS",SID || ',' || SERIAL# "WAITER",STATUS "W_STATUS",INST_ID,USERNAME,WAIT_CLASS "CLASS",SECONDS_IN_WAIT "WAIT",OSUSER,PROCESS,PROGRAM
FROM GV$SESSION
WHERE BLOCKING_SESSION IS NOT NULL
ORDER BY BLOCKING_SESSION;

--Blocking sessions II:
SELECT SUBSTR(DECODE(REQUEST,0,'Holder: ','Waiter: ')||SID,1,13) SESS,ID1,ID2,LMODE,REQUEST,TYPE,INST_ID
FROM GV$LOCK
WHERE (ID1,ID2,TYPE) IN (SELECT ID1,ID2,TYPE FROM GV$LOCK WHERE REQUEST>0)
ORDER BY ID1,REQUEST;  

--Currently active SQL:
SET LINES 300
SET PAGESIZE 1000
SET LONG 10000
COL SQL_TEXT FOR A100
SELECT S.USERNAME, S.SID, S.OSUSER, T.SQL_ID, SQL_TEXT
FROM V$SQLTEXT_WITH_NEWLINES T,V$SESSION S
WHERE T.ADDRESS =S.SQL_ADDRESS AND T.HASH_VALUE = S.SQL_HASH_VALUE AND S.STATUS = 'ACTIVE' AND S.USERNAME NOT IN ('SYSTEM','SYS','DBSNMP')
ORDER BY S.SID,T.PIECE;

--Queries running for more than 60 seconds:
SET LINES 300
SET PAGESIZE 1000
SET LONG 10000
COL USERNAME FOR A20
COL SID FOR 999999
COL SER# FOR 999999
COL OSUSER FOR A15
COL SQL_TEXT FOR A100
SELECT S.USERNAME USERNAME,S.SID SID,S.SERIAL# AS SER#,S.OSUSER OSUSER,S.LAST_CALL_ET/60 MINS_RUNNING,Q.SQL_TEXT SQL_TEXT
FROM V$SESSION S JOIN V$SQLTEXT_WITH_NEWLINES Q ON S.SQL_ADDRESS = Q.ADDRESS
WHERE STATUS='ACTIVE' AND TYPE <>'BACKGROUND' AND LAST_CALL_ET> 60
ORDER BY SID,SERIAL#,Q.PIECE;

--Which query is waiting:
SELECT SID, SQL_TEXT
FROM V$SESSION S, V$SQL Q
WHERE SID IN (SELECT SID FROM V$SESSION WHERE STATE IN ('WAITING') AND WAIT_CLASS != 'IDLE' AND EVENT='ENQ: TX - ROW LOCK CONTENTION' AND (Q.SQL_ID = S.SQL_ID OR Q.SQL_ID = S.PREV_SQL_ID));

--Running Queries (%)
SET LINES 300
SET PAGESIZE 100
COL "%_COMP" FOR 99.99'%'
COL "SID/SER" FOR A11
COL TARGET FOR A20
COL "SOFAR/TOTAL" FOR A15
COL "ELAP/REMAIN" FOR A13
COL MESSAGE FOR A65
COL USERNAME FOR A10
COL OPNAME FOR A20
COL UNITS FOR A6
COL SQL_PLAN_OPTIONS FOR A15
COL SQL_PLAN_OPERATION FOR A15
SELECT ROUND(SOFAR/TOTALWORK*100,2) "%_COMP", ''||SID||','||SERIAL#||'' "SID/SER", OPNAME, TARGET,''||SOFAR||'/'||TOTALWORK||'' "SOFAR/TOTAL", TO_CHAR(START_TIME, 'dd/mm/yy') "START", TO_CHAR(LAST_UPDATE_TIME, 'dd/mm/yy') "LAST UPDATE", ''||ELAPSED_SECONDS||'/'||TIME_REMAINING||'' "ELAP/REMAIN", MESSAGE, USERNAME, SQL_ID, SQL_PLAN_OPERATION, SQL_PLAN_OPTIONS
FROM V$SESSION_LONGOPS
WHERE SOFAR <> TOTALWORK
ORDER BY TARGET,SID;
